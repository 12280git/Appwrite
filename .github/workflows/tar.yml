name: Build and Release Appwrite

on:
  push:
    tags:
      - 'v*.*.*'
    paths:
      - 'src/main.js'
      - 'package.json'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Validate required files
      run: |
        if [ ! -f "src/main.js" ]; then
          echo "❌ main.js not found!"
          exit 1
        fi
        if [ ! -f "package.json" ]; then
          echo "❌ package.json not found!"
          exit 1
        fi
        echo "✅ Required files found"
        
    - name: Display file info
      run: |
        echo "📋 Files to be packaged:"
        echo "📁 src/ folder:"
        ls -la src/
        echo "📄 src/main.js ($(wc -l < src/main.js) lines, $(du -h src/main.js | cut -f1))"
        echo "📄 package.json ($(du -h package.json | cut -f1))"
        echo ""
        echo "📦 Package.json content:"
        cat package.json
        
    - name: Create package directory
      run: |
        mkdir -p appwrite-functions
        
    - name: Copy files to package directory
      run: |
        cp index.js appwrite-functions/
        cp package.json appwrite-functions/
        echo "✅ Files copied to package directory"
        
    - name: Create deployment archive
      run: |
        cd appwrite-functions
        tar -czf ../Appwrite-Functions.tar.gz src/main.js package.json
        cd ..
        echo "📦 Archive created: Appwrite-Functions.tar.gz"
        echo "📊 Archive size: $(du -h Appwrite-Functions.tar.gz | cut -f1)"
        
    - name: Verify archive contents
      run: |
        echo "🔍 Archive contents:"
        tar -tzf Appwrite-Functions.tar.gz
        
    - name: Generate release notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        ## 🚀 Appwrite Functions 部署包
        
        ⭐ **快速开始**: 创建Functions → 配置环境变量 → 下载压缩包 → 上传压缩包到Appwrite → 等待部署完成！
        EOF
        
    - name: Extract version from tag
      id: get_version
      run: |
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          VERSION="${{ github.ref_name }}"
        else
          VERSION="$(date +%Y%m%d)-$(echo $GITHUB_SHA | cut -c1-7)"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "📋 Version: $VERSION"
        
    - name: Debug information
      run: |
        echo "🔍 Debug information:"
        echo "GitHub Ref: ${{ github.ref }}"
        echo "GitHub Ref Type: ${{ github.ref_type }}"
        echo "GitHub Ref Name: ${{ github.ref_name }}"
        echo "GitHub Event Name: ${{ github.event_name }}"
        echo "GitHub Repository: ${{ github.repository }}"
        echo "GitHub Token available: ${{ secrets.GITHUB_TOKEN != '' }}"
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        name: "Appwrite Functions"
        body_path: release_notes.md
        files: Appwrite-Functions.tar.gz
        draft: false
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Release Summary
      run: |
        echo "🎉 Release completed successfully!"
        echo "📦 Package: Appwrite-Functions.tar.gz"
        echo "🏷️ Version: ${{ steps.get_version.outputs.version }}"
        echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.version }}"
        echo ""
        echo "📋 Next steps:"
        echo "1. Download the Appwrite-Functions.tar.gz from the release"
        echo "2. Extract index.js and package.json"
        echo "3. Upload to Appwrite Functions"
        echo "4. Configure environment variables"
        echo "5. Deploy and test!"
